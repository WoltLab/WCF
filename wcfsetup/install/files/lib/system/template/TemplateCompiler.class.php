<?php
namespace wcf\system\template;
use wcf\system\io\File;
use wcf\system\WCF;

/**
 * TemplateCompiler compiles template source in valid php code.
 * 
 * @author 	Marcel Werk
 * @copyright	2001-2011 WoltLab GmbH
 * @license	GNU Lesser General Public License <http://opensource.org/licenses/lgpl-license.php>
 * @package	com.woltlab.wcf
 * @subpackage	system.template
 * @category 	Community Framework
 */
class TemplateCompiler extends TemplateScriptingCompiler {
	/**
	 * Compiles the source of a template.
	 * 
	 * @param	string		$templateName
	 * @param	string		$sourceContent
	 * @param	string		$compiledFilename
	 */
	public function compile($templateName, $sourceContent, $compiledFilename) {
		// build fileheader
		$compiledHeader = "<?php\n/**\n* WoltLab Community Framework\n* Template: ".$templateName."\n* Compiled at: ".gmdate('r')."\n* \n* DO NOT EDIT THIS FILE\n*/\n\$this->v['tpl']['template'] = '".addcslashes($templateName, "'\\")."';\n?>\n";
		
		if (!WCF::debugModeIsEnabled()) {
			// shrink the template
			// Use multi-line comment. Otherwise the whole JS will be commented out
			$sourceContent = str_replace(array('//<![CDATA['), array('/*<![CDATA[*/'), $sourceContent);
			// Remove unnecessary whitespace
			$sourceContent = preg_replace(array('/\s\s+/', '/>\s+/', '/\s+</'), array(' ', '>', '<'), $sourceContent);
		}
		// include Plugins
		$compiledContent = $this->compileString($templateName, $sourceContent);
		
		// write compiled to file
		$file = new File($compiledFilename);
		$file->write($compiledHeader.$compiledContent);
		$file->close();
	}
	
	/**
	 * Returns the name of the current template.
	 * 
	 * @return 	string
	 */
	public function getCurrentTemplate() {
		return $this->getCurrentIdentifier();
	}
}
