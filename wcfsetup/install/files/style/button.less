/* default values */
button,
input[type='reset'],
input[type='submit'],
input[type='button'],
.button {
	border-radius: @wcfButtonBorderRadius;
	border-style: solid;
	border-width: 1px;
	cursor: pointer;
	display: inline-block;
	line-height: @wcfBaseLineHeight;
	margin: 0 4px;
	padding: 5px 13px;
	position: relative;
}

/* normal state */
.button,
input[type='reset']:not([disabled]),
input[type='submit']:not([disabled]),
input[type='button']:not([disabled]),
button:not([disabled]) {
	background-color: @wcfButtonBackgroundColor;
	border-color: @wcfButtonBorderColor;
	color: @wcfButtonColor;
	text-decoration: none;
	
	.textShadow(@wcfButtonBackgroundColor);
}

/* primary */
.button.buttonPrimary,
input[type='submit']:not([disabled]),
input[type='button']:not([disabled]).buttonPrimary,
button:not([disabled]).buttonPrimary {
	background-color: @wcfButtonPrimaryBackgroundColor;
	border-color: @wcfButtonPrimaryBorderColor;
	color: @wcfButtonPrimaryColor;
	font-weight: bold;
	
	.textShadow(@wcfButtonPrimaryBackgroundColor);
	
	.icon {
		color: @wcfButtonPrimaryColor;
	}
}

/* hover */
.button:hover,
input[type='reset']:not([disabled]):hover,
input[type='submit']:not([disabled]):hover,
input[type='button']:not([disabled]):hover,
button:not([disabled]):hover {
	background-color: @wcfButtonHoverBackgroundColor;
	border-color: @wcfButtonHoverBorderColor;
	color: @wcfButtonHoverColor;
	text-decoration: none;
	z-index: 100;
	
	.textShadow(@wcfButtonHoverBackgroundColor);
	
	.icon {
		color: @wcfButtonHoverColor;
	}
}

/* primary hover */
.button.buttonPrimary:hover,
input[type='submit']:not([disabled]):hover,
input[type='button']:not([disabled]).buttonPrimary:hover,
button:not([disabled]).buttonPrimary:hover {
	background-color: @wcfButtonPrimaryHoverBackgroundColor;
	border-color: @wcfButtonPrimaryHoverBorderColor;
	color: @wcfButtonPrimaryHoverColor;
	
	.textShadow(@wcfButtonPrimaryHoverBackgroundColor);
	
	.icon {
		color: @wcfButtonPrimaryHoverColor;
	}
}

/* disabled state */
input[type='reset']:disabled,
input[type='submit']:disabled,
input[type='button']:disabled,
button:disabled {
	background-color: @wcfButtonBackgroundColor;
	border-color: @wcfButtonBorderColor;
	color: lighten(@wcfButtonColor, 10%);
	cursor: not-allowed;
	text-decoration: none;
	
	.textShadow(@wcfButtonBackgroundColor);
}

/* active (permanently) */
.button.active,
input[type='button'].active,
button.active,
.button.active:hover,
input[type='button'].active:hover,
button.active:hover {
	background-color: @wcfButtonColor;
	border-color: darken(@wcfButtonColor, 5%);
	color: @wcfButtonBackgroundColor;
	
	.boxShadowInset(0, 1px, rgba(0, 0, 0, .1), 1px);
	.textShadow(@wcfButtonColor);
	
	.icon {
		color: @wcfButtonBackgroundColor;
		
		.textShadow(@wcfButtonColor);
	}
}

/* small buttons */
button.small,
.button.small {
	border-radius: @wcfSmallButtonBorderRadius;
	font-size: @wcfSmallFontSize;
	min-height: 13px;
	padding: 4px 9px;
	margin: 0 2px;
}

/* button list */
.buttonList {
	font-size: 0;
	margin-bottom: -@wcfGapSmall;
	
	> li {
		display: inline-block;
		font-size: 1rem;
		margin-bottom: @wcfGapSmall;
		
		&:not(:last-child) {
			margin-right: 8px;
		}
		
		.button {
			margin-left: 0;
			margin-right: 0;
		}
	}
	
	&.smallButtons {
		> li:not(:last-child) {
			margin-right: 4px;
		}
	}
	
	&.iconList {
		> li:not(:last-child) {
			margin-right: 2px;
		}
	}
}

/* button group */
.buttonGroup {
	font-size: 0;
	
	> li {
		font-size: 1rem;
		display: inline-block;
		
		/* fix for ad-blockers */
		&.likeButton {
			display: inline-block !important;
		}
		
		> .button {
			border-radius: 0;
			margin: 0 0 0 -1px;
		}
		
		&:first-child {
			> .button:not(.small) {
				border-top-left-radius: @wcfButtonBorderRadius;
				border-bottom-left-radius: @wcfButtonBorderRadius;
			}
			
			> .button.small {
				border-top-left-radius: @wcfSmallButtonBorderRadius;
				border-bottom-left-radius: @wcfSmallButtonBorderRadius;
			}
		}
		
		&:last-child {
			> .button:not(.small) {
				border-top-right-radius: @wcfButtonBorderRadius;
				border-bottom-right-radius: @wcfButtonBorderRadius;
			}
			
			> .button.small {
				border-top-right-radius: @wcfSmallButtonBorderRadius;
				border-bottom-right-radius: @wcfSmallButtonBorderRadius;
			}
		}
	}
}

.smallButtons {
	> li {
		font-size: @wcfSmallFontSize;
	}
}

nav.buttonGroupNavigation > a.dropdownLabel {
	display: none;
}

@media only screen and (max-width: 800px) {
	nav.buttonGroupNavigation {
		> a.dropdownLabel {
			display: inline-block;
			outline: 0;
			
			span.icon {
				font-size: 21px;
				height: 24px;
				width: 24px;
			}
		}
		
		> ul {
			display: none;
			font-size: 0;
			position: absolute;
			right: -3px;
			top: 24px;
			z-index: 450;
			
			&.open {
				display: block;
			}
			
			&.buttonGroup > li > .button {
				margin: 0;
			}
			
			> li {
				display: block;
				float: none;
				font-size: 0 !important;
				margin-bottom: 0;
				opacity: 1 !important;
				overflow: hidden;
				
				&:not(:last-child) > a {
					border-bottom-width: 0;
				}
				
				> a {
					.button;
					
					border-radius: 0 !important;
					font-size: @wcfSmallFontSize;
					overflow: hidden;
					text-overflow: ellipsis;
					width: 124px;
					white-space: nowrap;
					word-wrap: normal;
					
					> span.invisible {
						display: inline;
					}
				}
			}
		}
	}
}

/* sidebar buttons */
.sidebar {
	button,
	input[type='reset'],
	input[type='submit'],
	input[type='button'],
	.button {
		font-size: @wcfSmallFontSize;
		padding: 5px 11px;
	}
}

/* button icons */
.button > .icon {
	margin: -1px -5px;
	
	+ span {
		margin-left: 6px;
	}
}
